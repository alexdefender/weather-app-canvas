{"version":3,"sources":["Weather.js","App.js","index.js"],"names":["iconList","clearSky","fewClouds","brokenClouds","rain","thunderstorm","snow","mist","MORNING_SKY","AFTERNOON_SKY","NIGHT_SKY","SUN","MOON","CLOUD","RAIN","LIGHTING","SNOW","ERROR_404","render","ctx","_ref","height","width","weather","requestAnimationFrame","start","performance","now","hours","Date","getHours","fillStyle","fillRect","Object","keys","length","cod","icon","substr","drawMoon","drawSun","drawClouds","console","log","drawRain","x","y","color","save","beginPath","strokeStyle","xys","Math","sin","moveTo","translate","lineTo","lineWidth","fill","stroke","closePath","restore","drawThunderstorm","ys","i","drawSnow","xs","cos","quadraticCurveTo","drawMist","drawCircle","r","arc","PI","rs","rotate","Weather","this","canvas","getContext","props","_this","_this$props","react_default","a","createElement","ref","node","style","borderBottom","React","PureComponent","API_KEY","CORS_PROXY","App","state","city","error","_this2","_this$state","display","flexDirection","alignItems","Weather_Weather","padding","onSubmit","e","preventDefault","url","concat","fetch","then","json","fetchWeather","setState","catch","value","onChange","target","message","JSON","stringify","Component","rootElement","document","getElementById","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.7d16a7d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { object } from \"prop-types\";\n\nconst iconList = {\n  clearSky: \"01\",\n  fewClouds: \"02\",\n  brokenClouds: [\"03\", \"04\"],\n  rain: [\"09\", \"10\"],\n  thunderstorm: \"11\",\n  snow: \"13\",\n  mist: \"50\"\n};\n\nconst MORNING_SKY = \"#d7e8fd\";\nconst AFTERNOON_SKY = \"#6ba6f9\";\nconst NIGHT_SKY = \"#2e4482\";\nconst SUN = \"yellow\";\nconst MOON = \"#e6dfe8\";\nconst CLOUD = \"#b5aeb7\";\nconst RAIN = \"#356dee\";\nconst WIND = \"#7e807d\";\nconst LIGHTING = \"#ffcd00\";\nconst SNOW = \"#ffffff\";\nconst ERROR_404 = \"404\";\n\nfunction render(ctx, { height, width, weather }) {\n  requestAnimationFrame(() => render(ctx, { width, height, weather }));\n  let start = performance.now();\n  const hours = new Date().getHours();\n\n  if (6 <= hours && hours <= 11) {\n    ctx.fillStyle = MORNING_SKY;\n  } else if (12 <= hours && hours <= 20) {\n    ctx.fillStyle = AFTERNOON_SKY;\n  } else {\n    ctx.fillStyle = NIGHT_SKY;\n  }\n\n  ctx.fillRect(0, 0, width, height);\n\n  if (Object.keys(weather).length !== 0 && weather.cod !== ERROR_404) {\n    let weatherDescription = weather.weather[0].icon.substr(0, 2);\n\n    switch (weatherDescription) {\n      case iconList.clearSky:\n        if (ctx.fillStyle === NIGHT_SKY) {\n          drawMoon(width / 2, 80, MOON);\n        } else {\n          drawSun(width / 2, 100, SUN);\n        }\n        break;\n      case iconList.fewClouds:\n        if (ctx.fillStyle === NIGHT_SKY) {\n          drawMoon(width / 2, 80, MOON);\n        } else {\n          drawSun(width / 2, 100, SUN);\n        }\n        drawClouds(width / 2, 140, CLOUD);\n        break;\n      case iconList.brokenClouds[0]:\n      case iconList.brokenClouds[1]:\n        console.log(true);\n        drawClouds(width / 2, 140, CLOUD);\n        break;\n      case iconList.rain[0]:\n      case iconList.rain[1]:\n        drawRain(width / 2, 180, RAIN);\n        drawClouds(width / 2, 140, CLOUD);\n        break;\n      case iconList.thunderstorm:\n        drawThunderstorm(width / 2, 170, LIGHTING);\n        drawRain(width / 2, 180, RAIN);\n        drawClouds(width / 2, 140, CLOUD);\n        break;\n      case iconList.snow:\n        drawClouds(width / 2, 140, CLOUD);\n        drawSnow(width / 2 - 50, 210, SNOW);\n        break;\n      case iconList.mist:\n        drawClouds(width / 2, 140, CLOUD);\n        drawMist(width / 2 - 100, 110, 7, WIND);\n        break;\n    }\n  }\n\n  function drawCircle(x, y, r, color) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(x, y, r, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawSun(x, y, color) {\n    drawCircle(x, y, 50, SUN);\n    let gph = 360 / 12;\n    let rs = Math.cos(start / 300) * 5;\n\n    for (let i = 0; i < 12; i++) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(deg2rad(i * gph + rs));\n      ctx.fillStyle = color;\n      ctx.fillRect(-3, -90, 6, 30);\n      ctx.restore();\n    }\n  }\n\n  function drawMoon(x, y, color) {\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    let xs = Math.cos(start / 300) * 3;\n    ctx.moveTo(x, y - 50);\n    ctx.quadraticCurveTo(x - 45, y - 45, x - 50, y);\n    ctx.quadraticCurveTo(x - 45, y + 45, x, y + 50);\n    ctx.quadraticCurveTo(x - 50 + xs, y, x, y - 50);\n    ctx.stroke();\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  function drawMist(x, y, color) {\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    let xs = Math.cos(start / 400) * 3;\n    let ys = Math.cos(start / 400) * 2;\n    for (let i = 0; i < 3; i++) {\n      y = y + 20;\n      ctx.moveTo(x + xs, y + ys);\n      ctx.quadraticCurveTo(x + 25 + xs, y + 15 + ys, x + 50 + xs, y + ys);\n      ctx.quadraticCurveTo(x + 75 + xs, y - 15 + ys, x + 100 + xs, y + ys);\n      ctx.quadraticCurveTo(x + 125 + xs, y + 15 + ys, x + 150 + xs, y + ys);\n      ctx.quadraticCurveTo(x + 175 + xs, y - 15 + ys, x + 200 + xs, y + ys);\n    }\n    ctx.lineWidth = 7;\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  function drawThunderstorm(x, y, color) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    let xys = Math.sin(start / 300) * 2;\n    ctx.moveTo(x - xys, y + xys);\n    ctx.translate(x - xys, y + xys);\n    ctx.lineTo(-70, 100);\n    ctx.lineTo(-10, 40);\n    ctx.lineTo(-15, 60);\n    ctx.lineTo(25, 20);\n    ctx.lineTo(0, 0);\n    ctx.lineWidth = 1;\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  function drawRain(x, y, color) {\n    ctx.save();\n    ctx.fillStyle = color;\n    let ys = Math.sin(start / 300) * 5;\n    ctx.translate(x, y + ys);\n    ctx.fillRect(-60, 0, 6, 30);\n    ctx.fillRect(-25, 10, 6, 30);\n    ctx.fillRect(80, 0, 6, 30);\n    ctx.fillRect(25, 25, 6, 30);\n    ctx.fillRect(55, 20, 6, 30);\n    ctx.fillRect(0, 40, 6, 30);\n    ctx.restore();\n  }\n\n  function drawClouds(x, y, color) {\n    let xs = Math.sin(start / 300) * 3;\n    drawCircle(x - 30 + xs, y, 50, color);\n    drawCircle(x + 30 + xs, y, 50, color);\n    drawCircle(x - 80 + xs, y + 30, 30, color);\n    drawCircle(x + 80 + xs, y + 20, 30, color);\n    drawCircle(x + 35 + xs, y + 35, 35, color);\n  }\n\n  function drawSnow(x, y, color) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    let ys = Math.sin(start / 300) * 3;\n\n    for (let i = 0; i < 5; i++) {\n      ctx.moveTo(x, y);\n      ctx.translate(x, y + ys);\n      if (i < 2) {\n        x = 40;\n        y = 20;\n      } else if (i === 2) {\n        x = 40;\n        y = -15;\n      } else {\n        x = -110;\n        y = 25;\n      }\n      ctx.lineTo(0, 0);\n      ctx.lineTo(20, 0);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(10, 10);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(0, 20);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(-10, 10);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(-20, 0);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(-10, -10);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(0, -20);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(10, -10);\n    }\n    ctx.lineWidth = 1;\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  function deg2rad(deg) {\n    return (deg * Math.PI) / 180;\n  }\n}\n\nexport default class Weather extends React.PureComponent {\n  componentDidMount() {\n    this.ctx = this.canvas.getContext(\"2d\");\n    render(this.ctx, this.props);\n  }\n  componentDidUpdate() {\n    render(this.ctx, this.props);\n  }\n  render() {\n    const { width, height } = this.props;\n    return (\n      <canvas\n        ref={node => {\n          this.canvas = node;\n        }}\n        width={width}\n        height={height}\n        style={{\n          borderBottom: \"1px solid #eee\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Weather from \"./Weather\";\n\nconst API_KEY = \"8d1b861416af657fb97369937070ea06\";\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n\nfunction fetchWeather(city) {\n  let url = `${CORS_PROXY}https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}&q=${city}`;\n  return fetch(url).then(r => r.json());\n}\n\nexport default class App extends React.Component {\n  state = {\n    city: \"\",\n    weather: {},\n    error: null\n  };\n  render() {\n    const { city, weather, error } = this.state;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <Weather weather={weather} width={640} height={360} />\n        <form\n          style={{\n            padding: \"16px 0\"\n          }}\n          onSubmit={e => {\n            e.preventDefault();\n            fetchWeather(city)\n              .then(weather => {\n                this.setState({ weather });\n              })\n              .catch(error => this.setState({ error }));\n          }}\n        >\n          <input\n            value={city}\n            onChange={e => this.setState({ city: e.target.value })}\n          />\n          <button>Submit</button>\n        </form>\n        {error && <pre style={{ color: \"red\" }}>{error.message}</pre>}\n        <pre>{JSON.stringify(weather, null, 2)}</pre>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as THREE from \"three\";\nimport * as shaders from \"./shaders\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n/*let WIDTH = window.innerWidth;\nlet HEIGHT = window.innerHeight;\nlet canvas = document.createElement(\"canvas\");\ncanvas.width = WIDTH;\ncanvas.height = HEIGHT;\n\nrootElement.append(canvas);\n\nlet ctx = canvas.getContext(\"2d\");\n//*/\n// ctx.fillStyle = \"red\";\n// ctx.fillRect(10, 10, 100, 100); // заполнить квадрат\n//\n// ctx.fillStyle = \"green\";\n// ctx.fillRect(120, 10, 100, 200);\n//\n// ctx.beginPath();  //  открыть путь\n// ctx.moveTo(100, 300);\n// ctx.lineTo(0, 300);\n// ctx.closePath();  // закрыть путь\n// ctx.strokeStyle = \"red\"; // как border-color css\n// ctx.lineWidth = 5;\n// ctx.stroke(); // рисует border\n//\n// ctx.fillStyle = \"green\";\n// ctx.beginPath();\n// ctx.arc(300, 50, 40, 0, Math.PI * 2);\n// ctx.closePath();\n// ctx.fill(); // заливка\n//\n// ctx.save(); // начало, конец ctx.restore()\n// ctx.translate(300, 150);\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.strokeStyle = \"red\";\n// ctx.beginPath();\n// ctx.arc(0, 0, 40, 0, Math.PI * 2);\n// ctx.fill();\n// ctx.stroke();\n// ctx.closePath();\n// ctx.restore();\n\n// ctx.save();\n// ctx.font = \"48px monospace\";\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.fillText(\"Kottans\", 400, 50);\n// ctx.restore();\n\n/*function draw(t) {\n  console.log(t)\n  requestAnimationFrame(draw);\n  ctx.fillStyle = \"white\";\n  ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n  ctx.save();\n\n  let x = Math.sin(t / 300) * 100;\n  // let y = Math.cos(t / 100) * 100;\n  ctx.translate(300 + x, 250);\n\n  ctx.fillStyle = \"purple\";\n  ctx.beginPath();\n  ctx.arc(0, 0, 20, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.closePath();\n  ctx.restore();\n\n  // let dots = 10;\n  // for (let idx = 1; idx < dots + 1; idx++) {\n  //   let x = Math.sin((t / 4000) * idx) * 200;\n  //   let y = Math.cos((t / 4000) * idx) * 200;\n  //   ctx.save();\n  //   ctx.translate(300 + x, 250 + y);\n  //   ctx.fillStyle = \"purple\";\n  //   ctx.beginPath();\n  //   ctx.arc(0, 0, 10, 0, Math.PI * 2);\n  //   ctx.fill();\n  //   ctx.closePath();\n  //   ctx.restore();\n  // }\n}\ndraw();*/\n\n// // let img = new Image();\n// // img.crossOrigin = true;\n// // img.src = \"image.jpeg\";\n// // img.onload = function() {\n// //   ctx.drawImage(img, 10, 250);\n\n// //   let imdata = ctx.getImageData(0, 0, WIDTH, HEIGHT);\n\n// //   for (let idx = 0; idx < imdata.data.length; idx += 4) {\n// //     imdata.data[idx] = 255;\n// //   }\n\n// //   ctx.putImageData(imdata, 0, 0);\n// // };\n\n// // 3D with THREE.js\n// let scene = new THREE.Scene();\n// let camera = new THREE.PerspectiveCamera(30, WIDTH / HEIGHT, 1, 10000);\n// camera.position.z = 200;\n\n// let material = new THREE.ShaderMaterial({\n//   uniforms: {\n//     tExplosion: {\n//       type: \"t\",\n//       value: new THREE.TextureLoader().load(\"explosion.png\"),\n//     },\n//     time: {\n//       type: \"f\",\n//       value: 0.0,\n//     },\n//   },\n//   vertexShader: shaders.vs,\n//   fragmentShader: shaders.fs,\n// });\n\n// let mesh = new THREE.Mesh(new THREE.IcosahedronGeometry(20, 4), material);\n// scene.add(mesh);\n\n// let renderer = new THREE.WebGLRenderer();\n// renderer.setSize(WIDTH, HEIGHT);\n// renderer.setPixelRatio(window.devicePixelRatio);\n\n// // rootElement.children[0].remove();\n// // rootElement.appendChild(renderer.domElement);\n// // render();\n\n// function render(t) {\n//   material.uniforms[\"time\"].value = 0.00025 * t;\n//   renderer.render(scene, camera);\n//   requestAnimationFrame(render);\n// }\n"],"sourceRoot":""}